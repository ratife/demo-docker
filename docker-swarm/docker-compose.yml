version: "3.7"
services:
  traefik:
    image: traefik:v2.10
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik_network
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]

  demo-java-db:
    image: postgres:14-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./database/mysql:/var/lib/mysql
    networks:
      - traefik_network
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]

  demo-java:
    image: ratife/igy-demo-java:0.1
    depends_on:
      - demo-java-db
    networks:
      - traefik_network
    labels:
      - "traefik.http.routers.demophp1.rule=Host(`loader.viewpay.ingenosya.net`)"
      - "traefik.http.services.demophp1.loadbalancer.server.port=81"
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == worker]

  demo-php:
    image: ratife/igy-demo-php:0.1
    labels:
      - "traefik.http.routers.demophp1.rule=Host(`loader.viewpay.ingenosya.net`)"
      - "traefik.http.services.demophp1.loadbalancer.server.port=81"
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == worker]
    networks:
      - traefik_network

  demo-python:
    image: ratife/igy-demo-python:0.1
    labels:
      - "traefik.http.routers.demophp1.rule=Host(`loader.viewpay.ingenosya.net`)"
      - "traefik.http.services.demophp1.loadbalancer.server.port=81"
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == worker]
    networks:
      - traefik_network

networks:
  traefik_network:
          driver: overlay